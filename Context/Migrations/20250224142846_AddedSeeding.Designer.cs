// <auto-generated />
using Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Context.Migrations
{
    [DbContext(typeof(CvWebContext))]
    [Migration("20250224142846_AddedSeeding")]
    partial class AddedSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Context.BadgeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CardModelId")
                        .HasColumnType("int");

                    b.Property<string>("Emoji")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CardModelId");

                    b.ToTable("Badges");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CardModelId = 1,
                            Emoji = "🛒",
                            Label = "Part-time Sales Assistant: Studio 88"
                        },
                        new
                        {
                            Id = 2,
                            CardModelId = 1,
                            Emoji = "🛒",
                            Label = "Part-time Sales Assistant: Outdoor Warehouse"
                        },
                        new
                        {
                            Id = 3,
                            CardModelId = 1,
                            Emoji = "💻",
                            Label = "Software Developer Internship: 1Nebula"
                        },
                        new
                        {
                            Id = 4,
                            CardModelId = 1,
                            Emoji = "🎓",
                            Label = "CPUT Graduate in Computer Engineering"
                        });
                });

            modelBuilder.Entity("Context.CarouselImageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarouselModelId")
                        .HasColumnType("int");

                    b.PrimitiveCollection<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarouselModelId");

                    b.ToTable("CarouselImages");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            CarouselModelId = 2,
                            ImageUrl = "[\"src/assets/profilePic.png\",\"src/assets/gintoki.png\",\"src/assets/roxas.jpg\",\"src/assets/myf.png\",\"src/assets/ffv.jpg\"]"
                        });
                });

            modelBuilder.Entity("Context.HomeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Home");

                    b.HasDiscriminator().HasValue("HomeModel");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Context.CardModel", b =>
                {
                    b.HasBaseType("Context.HomeModel");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Card");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Experience Summary",
                            Country = "South Africa",
                            Description = "Graduated CPUT with a Bachelors in Computer Engineering. Part-time sales Assistant at Studio 88 and Outdoor Warehouse. Software Developer Internship at 1Nebula.",
                            Image = "src/assets/WorkStock.jpg"
                        });
                });

            modelBuilder.Entity("Context.CarouselModel", b =>
                {
                    b.HasBaseType("Context.HomeModel");

                    b.HasDiscriminator().HasValue("Carousel");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Title = "HomeImages"
                        });
                });

            modelBuilder.Entity("Context.BadgeModel", b =>
                {
                    b.HasOne("Context.CardModel", "Card")
                        .WithMany("Badges")
                        .HasForeignKey("CardModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");
                });

            modelBuilder.Entity("Context.CarouselImageModel", b =>
                {
                    b.HasOne("Context.CarouselModel", "Carousel")
                        .WithMany("Images")
                        .HasForeignKey("CarouselModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carousel");
                });

            modelBuilder.Entity("Context.CardModel", b =>
                {
                    b.Navigation("Badges");
                });

            modelBuilder.Entity("Context.CarouselModel", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
