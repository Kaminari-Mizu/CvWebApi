// <auto-generated />
using CvWebApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Context;

#nullable disable

namespace CvWebApi.Migrations
{
    [DbContext(typeof(CvWebContext))]
    partial class CvWebContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CvWebApi.Models.BadgeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CardModelId")
                        .HasColumnType("int");

                    b.Property<string>("Emoji")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CardModelId");

                    b.ToTable("Badges");
                });

            modelBuilder.Entity("CvWebApi.Models.CarouselImageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarouselModelId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarouselModelId");

                    b.ToTable("CarouselImages");
                });

            modelBuilder.Entity("CvWebApi.Models.HomeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Home");

                    b.HasDiscriminator().HasValue("HomeModel");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("CvWebApi.Models.CardModel", b =>
                {
                    b.HasBaseType("CvWebApi.Models.HomeModel");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Card");
                });

            modelBuilder.Entity("CvWebApi.Models.CarouselModel", b =>
                {
                    b.HasBaseType("CvWebApi.Models.HomeModel");

                    b.HasDiscriminator().HasValue("Carousel");
                });

            modelBuilder.Entity("CvWebApi.Models.BadgeModel", b =>
                {
                    b.HasOne("CvWebApi.Models.CardModel", "Card")
                        .WithMany("Badges")
                        .HasForeignKey("CardModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");
                });

            modelBuilder.Entity("CvWebApi.Models.CarouselImageModel", b =>
                {
                    b.HasOne("CvWebApi.Models.CarouselModel", "Carousel")
                        .WithMany("Images")
                        .HasForeignKey("CarouselModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carousel");
                });

            modelBuilder.Entity("CvWebApi.Models.CardModel", b =>
                {
                    b.Navigation("Badges");
                });

            modelBuilder.Entity("CvWebApi.Models.CarouselModel", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
